name: Security Audit Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install security tools
      run: |
        pip install bandit pip-audit
        pip install -r data_engineering/requirements.txt
        sudo apt-get update && sudo apt-get install -y jq
        
    - name: Code security scan (Bandit)
      continue-on-error: true
      run: |
        echo "üìã Scanning Python code for security issues..."
        bandit -r data_engineering/ -f json -o bandit-report.json
        
    - name: Dependency vulnerability scan (pip-audit)
      continue-on-error: true
      run: |
        echo "üì¶ Scanning dependencies for known vulnerabilities..."
        pip-audit
        
    - name: Check for high/critical vulnerabilities
      run: |
        echo "üîç Analyzing scan results..."
        VULN_COUNT=0
        
        # Check Bandit for high-severity issues
        if [ -f bandit-report.json ]; then
          HIGH_COUNT=$(cat bandit-report.json | jq '[.results[]? | select(.issue_severity == "HIGH" or .issue_severity == "MEDIUM")] | length' 2>/dev/null || echo "0")
          if [ "$HIGH_COUNT" -gt 0 ]; then
            echo "‚ùå Found $HIGH_COUNT high/medium severity code issues"
            VULN_COUNT=$((VULN_COUNT + HIGH_COUNT))
          fi
        fi
        
        # Check pip-audit for critical vulnerabilities
        pip-audit --format json --output /tmp/pip-audit-report.json 2>/dev/null || true
        if [ -f /tmp/pip-audit-report.json ]; then
          # Count vulnerabilities from pip-audit output
          AUDIT_COUNT=$(pip-audit 2>&1 | grep -c "Found.*known vulnerability" || echo "0")
          if [ "$AUDIT_COUNT" -gt 0 ]; then
            echo "‚ùå Found $AUDIT_COUNT vulnerable dependencies"
            VULN_COUNT=$((VULN_COUNT + AUDIT_COUNT))
          fi
        fi
        
        # Fail if any high/critical issues found
        if [ "$VULN_COUNT" -gt 0 ]; then
          echo "‚ùå BLOCKING: Found $VULN_COUNT security issue(s) that must be fixed"
          echo "Please update vulnerable dependencies and fix code issues"
          exit 1
        else
          echo "‚úÖ No blocking security issues found"
        fi
        
    - name: Comment on PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const comment = `## üîí Security Scan Complete
          
          **Code Security:** ‚úÖ Checked with Bandit
          **Dependencies:** ‚úÖ Checked with pip-audit
          
          All security checks passed! See Actions logs for details.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
