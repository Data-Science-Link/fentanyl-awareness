name: Security Audit Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install security tools
      run: |
        pip install bandit pip-audit
        pip install -r data_engineering/requirements.txt
        
    - name: Run security scans
      run: |
        echo "🔍 Running comprehensive security scan..."
        
        # Python security scan
        echo "📋 Scanning Python code..."
        bandit -r data_engineering/ -f json -o bandit-report.json || true
        bandit -r data_engineering/ -f txt
        
        # Dependency vulnerability scan
        echo "📦 Scanning dependencies..."
        pip-audit --format json --output safety-report.json || true
        pip-audit
        
    - name: Comment on PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          let issues = 0;
          let vulnerabilities = 0;
          
          // Count Bandit issues
          if (fs.existsSync('bandit-report.json')) {
            try {
              const banditReport = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
              issues = banditReport.results?.length || 0;
            } catch (e) {}
          }
          
          // Count pip-audit vulnerabilities
          if (fs.existsSync('safety-report.json')) {
            try {
              const auditReport = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
              vulnerabilities = auditReport.vulnerabilities?.length || 0;
            } catch (e) {}
          }
          
          const total = issues + vulnerabilities;
          const status = total > 0 ? '⚠️' : '✅';
          const message = total > 0 ? `${total} security issues found` : 'No security issues detected';
          
          const comment = `## 🔒 Security Scan Results
          
          **Status:** ${status} ${message}
          
          ${issues > 0 ? `- Code issues: ${issues}` : ''}
          ${vulnerabilities > 0 ? `- Dependency vulnerabilities: ${vulnerabilities}` : ''}
          
          Check Actions logs for details.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
